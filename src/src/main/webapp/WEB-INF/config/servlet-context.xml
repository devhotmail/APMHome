<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd

		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
  <!-- Enables the Spring MVC @Controller programming model -->
  <mvc:annotation-driven/>
  <!-- Scan for Spring beans declared via annotations. -->
  <context:component-scan base-package="com.ge.webris.web, com.ge.apm.web"/>
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="utf-8" p:maxUploadSize="100000"/>

  <!-- Resolves views selected for rendering by @Controllers to .xhtml resources in the /WEB-INF/views directory -->
  <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    <property name="viewClass" value="org.springframework.faces.mvc.JsfView"/>
    <property name="suffix" value=".xhtml"/>
  </bean>

  <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>
  <bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"/>
  <!-- Imports user-defined @Controller beans that process client requests -->
  <import resource="controllers.xml"/>

  <bean id="aopAdvices" class="com.ge.apm.service.utils.AopAdvices"/>

  <aop:config proxy-target-class="true">
    <aop:aspect ref="aopAdvices" order="999">
      <aop:around method="logTag" pointcut="@annotation(com.ge.apm.service.utils.Log)"/>
      <aop:around method="fixUrl" pointcut="@annotation(org.springframework.web.bind.annotation.RequestMapping)"/>
      <aop:around method="logRequest" pointcut="@annotation(org.springframework.web.bind.annotation.RequestMapping)"/>
    </aop:aspect>
  </aop:config>
</beans>